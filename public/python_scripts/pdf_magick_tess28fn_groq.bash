#!/bin/bash

# ~/lx/lx14/public/py/pdf_magick_tess28fn_groq.bash

# This script leads towards automating OCR + groq-LLM text generation from Complaint docs.
# This script wants a file name , not a case number
# Demo:
# bash pdf_magick_tess21fn_groq.bash 34-2021-00294041-CU-OR-GDS_43_02_05_2021_Complaint_Duong_Huong_Thi_Tha.pdf
# llama-3.3-70b-specdec <-- uses this
# I need access to qpdf, magick, and tesseract:

date

. gemini2.bash

if [ -n "$1" ]; then
    bnpdf=$1 # basename of file I want to study
    fnpdf=`find /home/dan/gsc1/cases/case_types/real_property/ -iname $1 | head -1`
    echo fnpdf is $fnpdf
    dir_cn_s=`dirname $fnpdf`
else
    echo You forgot to give me a value for file_name. Bye.
    exit 1
fi

if [ ! -f $fnpdf ]; then
  echo "Error: $fnpdf missing , bye."
  exit 1
fi

fn=`echo $fnpdf | sed 's/.pdf$//'`
echo fn is $fn
mkdir $fn

# Generate png files from pdf using imagemagick

# use ~/anaconda3/envs/gemini2 imagemagick to convert pdf to png:
# I need to cut the pdf into pieces or else magick will choke.

rm -rf   /tmp/mypdf/
mkdir -p /tmp/mypdf/

cp $fnpdf /tmp/mypdf/big.pdf

# skip this step , just tell the script that big.pdf is 15 pages
# qpdf --show-npages /tmp/mypdf/big.pdf
# num_pages=$(qpdf --show-npages /tmp/mypdf/big.pdf)
# echo /tmp/mpypdf/big.pdf num_pages $num_pages
num_pages=15

echo qpdf is busy...
for ((i=1; i<=num_pages; i++)); do
    output_file=$(printf "/tmp/mypdf/my%s%03d.pdf" "$output_prefix" "$i")
    echo qpdf /tmp/mypdf/big.pdf --pages /tmp/mypdf/big.pdf "$i" -- "$output_file"
    ~/anaconda3/envs/gemini2/bin/qpdf /tmp/mypdf/big.pdf --pages /tmp/mypdf/big.pdf "$i" -- "$output_file"
done

date

# Save my work to a folder near the Complaint doc.
rsync -av /tmp/mypdf $dir_cn_s

# Use imagemagick to convert pdf files to png.
echo magick is busy...
for ffnpdf in /tmp/mypdf/my0*.pdf
do
    echo magick -density 300 $ffnpdf -quality 100 ${ffnpdf}.png
    ~/anaconda3/envs/gemini2/bin/magick -density 300 $ffnpdf -quality 100 ${ffnpdf}.png
done

date

# Save my work to a folder near the Complaint doc.
rsync -av /tmp/mypdf $dir_cn_s

# Use tesseract to generate txt files from png files:
echo tesseract is busy...
for fnpng in /tmp/mypdf/my0*.png
do
    echo tesseract $fnpng $fnpng
    ~/anaconda3/envs/gemini2/bin/tesseract $fnpng $fnpng
done

date

cat /tmp/mypdf/my???.pdf.png.txt > /tmp/mypdf/big.pdf.png.txt
# Save my work to a folder near the Complaint doc.
rsync -av /tmp/mypdf $dir_cn_s

# Prep for the LLM.

# Ask the llm to fix the OCR output.
date 
echo LLM is busy please wait .......
model_s=llama3-70b-8192
for mytxtfn in /tmp/mypdf/my0*.txt
do
    echo working on: $mytxtfn ...
    cat ocr_prompt14pdf.txt $mytxtfn > ${mytxtfn}_ocr_prompt.txt
    # Feed groq 1 page of text:
    ./groq4.bash ${mytxtfn}_ocr_prompt.txt ${model_s} > ${mytxtfn}_llm_enhanced.txt
    # throttle it via 4 sec delay, leading to 15 Req/min (about) ,
    # which is less than API limit of 30 Req/Min:
    sleep 4
    date
done

date

# Save my work to a folder near the Complaint doc.
rsync -av /tmp/mypdf $dir_cn_s

echo Now I will throttle back for 63 sec to ease load on API server...
sleep 63

date

# Do 3 layers of summarization; each layer does 10 pages.
# If I have 5 pages I do 1 layer.
# If I have 15 pages I do 2 layers.
# I use layers to prevent LLM context over-flow
model_s=llama-3.3-70b-specdec # switch models
# Get first 9 pages and prep for llm 1 summary.  <----
echo LLM 1 summary is busy please wait .......
cat summary_prompt10.txt /tmp/mypdf/my00*_llm_enhanced.txt > /tmp/mypdf/full_summary_1_prompt.txt
echo '```' >>  /tmp/mypdf/full_summary_1_prompt.txt
echo Generated by: ${model_s}                                 > /tmp/mypdf/big_llm_1_summary.txt
./groq4.bash /tmp/mypdf/full_summary_1_prompt.txt ${model_s} >> /tmp/mypdf/big_llm_1_summary.txt
echo Generated by: ${model_s}                                >> /tmp/mypdf/big_llm_1_summary.txt
echo LLM summary 1 is done.
rsync -av /tmp/mypdf $dir_cn_s

date

echo Now I will throttle back for 63 sec to ease load on API server...

sleep 63
date

# switch models:
model_s=llama-3.3-70b-versatile

if [ -f /tmp/mypdf/my010.pdf.png.txt_llm_enhanced.txt ]; then
    cat summary_prompt12.txt               > /tmp/mypdf/full_summary_2_prompt.txt
    echo '```big_llm_1_summary.txt'       >> /tmp/mypdf/full_summary_2_prompt.txt
    cat /tmp/mypdf/big_llm_1_summary.txt  >> /tmp/mypdf/full_summary_2_prompt.txt
    echo '```'                            >> /tmp/mypdf/full_summary_2_prompt.txt
    echo '```llm_ehanced.txt'             >> /tmp/mypdf/full_summary_2_prompt.txt
    cat /tmp/mypdf/my01*_llm_enhanced.txt >> /tmp/mypdf/full_summary_2_prompt.txt
    echo '```'                            >> /tmp/mypdf/full_summary_2_prompt.txt
    echo LLM 2 summary is busy please wait .......
    echo Generated by: ${model_s}                                 > /tmp/mypdf/big_llm_2_summary.txt
    ./groq4.bash /tmp/mypdf/full_summary_2_prompt.txt ${model_s} >> /tmp/mypdf/big_llm_2_summary.txt
    echo Generated by: ${model_s}                                >> /tmp/mypdf/big_llm_2_summary.txt
    echo LLM summary 2 is done.
    rsync -av /tmp/mypdf $dir_cn_s
    echo Now I will throttle back for 63 sec to ease load on API server...
    sleep 63
fi
# If I get this far, switch models:
model_s=llama3-70b-8192
if [ -f /tmp/mypdf/my020.pdf.png.txt_llm_enhanced.txt ]; then
    cat summary_prompt10.txt /tmp/mypdf/big_llm_2_summary.txt /tmp/mypdf/my02*_llm_enhanced.txt > /tmp/mypdf/full_summary_3_prompt.txt
    echo '```' >> /tmp/mypdf/full_summary_3_prompt.txt
    echo LLM 3 summary is busy please wait .......
    echo Generated by: ${model_s}                                 > /tmp/mypdf/big_llm_3_summary.txt
    ./groq4.bash /tmp/mypdf/full_summary_3_prompt.txt ${model_s} >> /tmp/mypdf/big_llm_3_summary.txt
    echo Generated by: ${model_s}                                >> /tmp/mypdf/big_llm_3_summary.txt
fi



# Save my work to a folder near the Complaint doc.
rsync -av /tmp/mypdf $dir_cn_s
rsync -av /tmp/mypdf ${fn}/

echo 'See these summary files, maybe we have 3? , perhaps the 3rd is best:'
ls -l /tmp/mypdf/big_llm_?_summary.txt

echo Now done with $fn
date
echo .........................

exit
